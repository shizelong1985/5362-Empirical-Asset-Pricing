) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
scale_y_continuous(labels = percent)
ggsave("gfx/longshort_invdist_cumret.pdf", width = 10, height = 5)
# Share of industries in Low Portfolio
data_invdist_portfolios <- data |>
group_by(month) |>
mutate(
portfolio = assign_portfolio(
data = cur_data(),
var = invdist,
n_portfolios = N_port
),
portfolio = as.factor(portfolio)
)
# Industry distribution in Low Portfolio
data_invdist_portfolios |>
filter(portfolio == min(as.numeric(portfolio))) |>
group_by(industry) |>
summarize(
n = n(),
.groups = "drop"
) |>
mutate(
share = n / sum(n)
) |>
ggplot(aes(x = reorder(industry, share), y = share, fill = as.factor(1))) +
geom_col() +
theme_economist() +
scale_fill_economist() +
theme(legend.position = "None") +
scale_y_continuous(labels = percent) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(
x = NULL, y = NULL
)
ggsave("gfx/industry_distribution_low.pdf", width = 10, height = 5)
# Industry distribution in High Portfolio
data_invdist_portfolios |>
filter(portfolio == max(as.numeric(portfolio))) |>
group_by(industry) |>
summarize(
n = n(),
.groups = "drop"
) |>
mutate(
share = n / sum(n)
) |>
ggplot(aes(x = reorder(industry, share), y = share, fill = as.factor(1))) +
geom_col() +
theme_economist() +
scale_fill_economist() +
scale_y_continuous(labels = percent) +
theme(legend.position = "None") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(
x = NULL, y = NULL
)
ggsave("gfx/industry_distribution_high.pdf", width = 10, height = 5)
# Plot industry distribution in Low and High Portfolio in one plot with separate bars for each portfolio
data_invdist_portfolios |>
mutate(portfolio = case_when(
portfolio == max(as.numeric(portfolio)) ~ "high",
portfolio == min(as.numeric(portfolio)) ~ "low"
)) |>
filter(portfolio %in% c("low", "high")) |>
group_by(portfolio, industry) |>
summarize(
n = n(),
.groups = "drop"
) |>
mutate(
share = n / sum(n)
) |>
ggplot(aes(x = reorder(industry, share), y = share, fill = portfolio)) +
geom_col() +
theme_economist() +
scale_fill_economist() +
theme(legend.title=element_blank()) +
scale_y_continuous(labels = percent) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(
x = NULL, y = NULL
)
ggsave("gfx/industry_distribution_low_high.pdf", width = 10, height = 5)
data_ex_mfg <- data |>
filter(industry != "Manufacturing")
invdist_portfolios_ex_mfg <- data_ex_mfg |>
group_by(month) |>
mutate(
portfolio = assign_portfolio(
data = cur_data(),
var = invdist,
n_portfolios = N_port
),
portfolio = as.factor(portfolio)
) |>
group_by(portfolio, month) |>
reframe(
ret = weighted.mean(ret_excess, mktcap, na.rm = TRUE),
cumret = weighted.mean(ret_cum, mktcap, na.rm = TRUE)
)
# Drop NA values
invdist_portfolios_ex_mfg <- invdist_portfolios_ex_mfg |>
filter(!is.na(ret) & !is.na(cumret))
invdist_summary_ex_mfg <- invdist_portfolios_ex_mfg |>
left_join(factors_ff_monthly, by = "month") |>
group_by(portfolio) |>
reframe(
alpha = as.numeric(lm(ret ~ 1 + mkt_excess + smb + hml + rmw + cma)$coefficients[1]),
alpha_pval = as.numeric(summary(lm(ret ~ 1 + mkt_excess + smb + hml + rmw + cma))$coefficients[1, 4]),
beta = as.numeric(lm(ret ~ 1 + mkt_excess + smb + hml + rmw + cma)$coefficients[2]),
cma_coef = as.numeric(lm(ret ~ 1 + mkt_excess + smb + hml + rmw + cma)$coefficients[6]),
ret = mean(ret),
cumret = mean(cumret)
)
# Sort portfolio_summary by portfolio
invdist_summary_ex_mfg <- invdist_summary_ex_mfg |>
mutate(portfolio = as.numeric(portfolio)) |>
arrange(portfolio) |>
mutate(portfolio = as.factor(portfolio))
# Plot CAPM alphas
invdist_summary_ex_mfg |>
ggplot(aes(x = portfolio, y = alpha, fill = portfolio)) +
geom_bar(stat = "identity") +
theme_economist() +
scale_fill_economist() +
labs(
x = "Portfolio",
y = TeX("\\alpha"),
fill = "Portfolio"
) +
geom_text(
aes(
label = ifelse(alpha_pval < 0.01, "***", ifelse(alpha_pval < 0.05, "**", ifelse(alpha_pval < 0.1, "*", "")))
),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 10
) +
scale_y_continuous(labels = percent) +
theme(legend.position = "None")
ggsave("gfx/longshort_invdist_alpha_ex_mfg.pdf", width = 10, height = 5)
# Plot CAPM betas
invdist_summary_ex_mfg |>
ggplot(aes(x = portfolio, y = beta, fill = portfolio)) +
geom_bar(stat = "identity") +
theme_economist() +
scale_fill_economist() +
labs(
x = "Portfolio",
y = TeX("\\beta$_{mkt}$"),
fill = "Portfolio"
) +
theme(legend.position = "None")
ggsave("gfx/longshort_invdist_beta_ex_mfg.pdf", width = 10, height = 5)
# Plot CMA coefficients
invdist_summary_ex_mfg |>
ggplot(aes(x = portfolio, y = cma_coef, fill = portfolio)) +
geom_bar(stat = "identity") +
theme_economist() +
scale_fill_economist() +
labs(
x = "Portfolio",
y = TeX("\\beta$_{cma}$"),
fill = "Portfolio"
) +
theme(legend.position = "None")
ggsave("gfx/longshort_invdist_cma_ex_mfg.pdf", width = 10, height = 5)
### Long-Short ###
longshort_invdist_ex_mfg <- invdist_portfolios_ex_mfg |>
ungroup() |>
mutate(portfolio = case_when(
portfolio == max(as.numeric(portfolio)) ~ "high",
portfolio == median(as.numeric(portfolio)) ~ "medium",
portfolio == min(as.numeric(portfolio)) ~ "low"
)) |>
filter(portfolio %in% c("low", "high")) |>
left_join(factors_ff_monthly, by = "month")
# Construct series with low - high portfolio returns
longshort_invdist_ex_mfg <- longshort_invdist_ex_mfg |>
group_by(month) |>
reframe(
long_short = sum(ret * (portfolio == "low")) - sum(ret * (portfolio == "high")),
mkt_excess = mean(mkt_excess)
)
# Test for significance
coeftest(lm(long_short ~ 1, data = longshort_invdist_ex_mfg),
vcov = NeweyWest
)
test_InvDist_ex_mfg <- summary(lm(long_short ~ 1, data = longshort_invdist_ex_mfg))
# test_InvDist in a LaTeX table with coefficients and p-values
test_InvDist_ex_mfg <- kable(test_InvDist_ex_mfg$coefficients, digits = 3, format = "latex")
# Save table as .tex file
writeLines(test_InvDist_ex_mfg, "tables/test_InvDist_ex_mfg.tex")
# Plot cumulative sum of long-short returns vs. cumulative sum of market returns
longshort_invdist_ex_mfg %>%
mutate(
long_short_sum = cumsum(long_short),
mkt_sum = cumsum(mkt_excess)
) %>%
ggplot(aes(x = month)) +
geom_line(aes(y = long_short_sum, color = "Long-Short")) +
geom_line(aes(y = mkt_sum, color = "Market")) +
theme_economist() +
scale_color_economist() +
labs(
x = "",
y = "Cumulative excess returns",
color = "Strategy"
) +
theme(legend.title=element_blank()) +
theme(plot.subtitle = element_text(
hjust = 0,
vjust = -1,
face = "italic"
)) +
labs(
subtitle = "Long-Short: Low - High"
) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
scale_y_continuous(labels = percent)
ggsave("gfx/longshort_invdist_cumret_ex_mfg.pdf", width = 10, height = 5)
data_mfg <- data |>
filter(industry == "Manufacturing")
invdist_portfolios_mfg <- data_mfg |>
group_by(month) |>
mutate(
portfolio = assign_portfolio(
data = cur_data(),
var = invdist,
n_portfolios = N_port
),
portfolio = as.factor(portfolio)
) |>
group_by(portfolio, month) |>
reframe(
ret = weighted.mean(ret_excess, mktcap, na.rm = TRUE),
cumret = weighted.mean(ret_cum, mktcap, na.rm = TRUE)
)
invdist_portfolios_mfg <- invdist_portfolios_mfg |>
filter(!is.na(ret) & !is.na(cumret))
invdist_summary_mfg <- invdist_portfolios_mfg |>
left_join(factors_ff_monthly, by = "month") |>
group_by(portfolio) |>
reframe(
alpha = as.numeric(lm(ret ~ 1 + mkt_excess + smb + hml + rmw + cma)$coefficients[1]),
alpha_pval = summary(lm(ret ~ 1 + mkt_excess + smb + hml + rmw + cma))$coefficients[1, 4],
beta = as.numeric(lm(ret ~ 1 + mkt_excess + smb + hml + rmw + cma)$coefficients[2]),
cma_coef = as.numeric(lm(ret ~ 1 + mkt_excess + smb + hml + rmw + cma)$coefficients[6]),
ret = mean(ret),
cumret = mean(cumret)
)
# Sort portfolio_summary by portfolio
invdist_summary_mfg <- invdist_summary_mfg |>
mutate(portfolio = as.numeric(portfolio)) |>
arrange(portfolio) |>
mutate(portfolio = as.factor(portfolio))
# Plot CAPM alphas
invdist_summary_mfg |>
ggplot(aes(x = portfolio, y = alpha, fill = portfolio)) +
geom_bar(stat = "identity") +
theme_economist() +
scale_fill_economist() +
labs(
x = "Portfolio",
y = TeX("\\alpha"),
fill = "Portfolio"
) +
geom_text(
aes(
label = ifelse(alpha_pval < 0.01, "***", ifelse(alpha_pval < 0.05, "**", ifelse(alpha_pval < 0.1, "*", "")))
),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 10
) +
scale_y_continuous(labels = percent) +
theme(legend.position = "None")
ggsave("gfx/longshort_invdist_alpha_mfg.pdf", width = 10, height = 5)
# Plot CAPM betas
invdist_summary_mfg |>
ggplot(aes(x = portfolio, y = beta, fill = portfolio)) +
geom_bar(stat = "identity") +
theme_economist() +
scale_fill_economist() +
labs(
x = "Portfolio",
y = TeX("\\beta$_{mkt}$"),
fill = "Portfolio"
) +
theme(legend.position = "None")
ggsave("gfx/longshort_invdist_beta_mfg.pdf", width = 10, height = 5)
# Plot CMA coefficients
invdist_summary_mfg |>
ggplot(aes(x = portfolio, y = cma_coef, fill = portfolio)) +
geom_bar(stat = "identity") +
theme_economist() +
scale_fill_economist() +
labs(
x = "Portfolio",
y = TeX("\\beta$_{cma}$"),
fill = "Portfolio"
) +
theme(legend.position = "None")
ggsave("gfx/longshort_invdist_cma_mfg.pdf", width = 10, height = 5)
### Long-Short ###
longshort_invdist_mfg <- invdist_portfolios_mfg |>
ungroup() |>
mutate(portfolio = case_when(
portfolio == max(as.numeric(portfolio)) ~ "high",
portfolio == min(as.numeric(portfolio)) ~ "low"
)) |>
filter(portfolio %in% c("low", "high")) |>
left_join(factors_ff_monthly, by = "month")
# Construct series with low - high portfolio returns
longshort_invdist_mfg <- longshort_invdist_mfg |>
group_by(month) |>
reframe(
long_short = sum(ret * (portfolio == "low")) - sum(ret * (portfolio == "high")),
mkt_excess = mean(mkt_excess)
)
# Test for significance
coeftest(lm(long_short ~ 1, data = longshort_invdist_mfg),
vcov = NeweyWest
)
test_InvDist_mfg <- summary(lm(long_short ~ 1, data = longshort_invdist_mfg))
# test_InvDist in a LaTeX table with coefficients and p-values
test_InvDist_mfg <- kable(test_InvDist_mfg$coefficients, digits = 3, format = "latex")
# Save table as .tex file
writeLines(test_InvDist_mfg, "tables/test_InvDist_mfg.tex")
# Plot cumulative sum of long-short returns vs. cumulative sum of market returns
longshort_invdist_mfg %>%
mutate(
long_short_sum = cumsum(long_short),
mkt_sum = cumsum(mkt_excess)
) %>%
ggplot(aes(x = month)) +
geom_line(aes(y = long_short_sum, color = "Long-Short")) +
geom_line(aes(y = mkt_sum, color = "Market")) +
theme_economist() +
scale_color_economist() +
labs(
x = "",
y = "Cumulative excess returns",
color = "Strategy"
) +
theme(legend.title=element_blank()) +
theme(plot.subtitle = element_text(
hjust = 0,
vjust = -1,
face = "italic"
)) +
labs(
subtitle = "Long-Short: Low - High"
) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
scale_y_continuous(labels = percent)
ggsave("gfx/longshort_invdist_cumret_mfg.pdf", width = 10, height = 5)
# This method uses the entire sample to construct the portfolios.
# The portfolios are then rebalanced every month.
data <- data_ex_mfg
data$year <- as.numeric(format(data$month, "%Y"))
# Create a data frame with the investment distortion and size of each stock's market cap
data <- data |>
group_by(year) |>
mutate(size = case_when(
mktcap < quantile(mktcap, 0.33) ~ "small",
mktcap >= quantile(mktcap, 0.33) & mktcap < quantile(mktcap, 0.66) ~ "medium",
mktcap >= quantile(mktcap, 0.66) ~ "large"
))
# For each size category, sort stocks by investment distortion and construct portfolios
# with the lowest, middle, and highest investment distortion
data <- data |>
group_by(year, size) |>
mutate(
invdist_rank = rank(invdist),
invdist_port = case_when(
invdist < quantile(invdist, 0.33) ~ "low",
invdist >= quantile(invdist, 0.33) & invdist < quantile(invdist, 0.66) ~ "medium",
invdist >= quantile(invdist, 0.66) ~ "high"
)
)
# Average investment distortion by size and portfolio and count number of stocks
conditional <- data |>
group_by(size, invdist_port, month) |>
mutate(
n = n(),
mean_invdist = weighted.mean(invdist, mktcap),
mean_mktcap = mean(mktcap),
mean_ret = weighted.mean(ret_excess, mktcap, na.rm = TRUE)
) |>
ungroup() |>
group_by(size, invdist_port) |>
summarise(
mean_invdist = weighted.mean(mean_invdist, mktcap),
mean_mktcap = mean(mean_mktcap),
mean_ret = weighted.mean(mean_ret, mktcap),
n = mean(n)
)
# Make geom_tile plot with investment distortion and size and label mean returns and number of stocks
conditional |>
group_by(size, invdist_port) |>
ggplot(aes(x = size, y = invdist_port, fill = as.factor((1:9)))) +
geom_tile() +
geom_text(aes(label = scales::percent(round((mean_ret), 3))), size = 8, color = "black") +
geom_text(aes(label = paste0('(',round((n),0),')')), color = "black", vjust = 3, size = 5) +
theme_economist() +
#scale_colour_steps() +
scale_fill_brewer(palette = "BrBG") +
labs(
x = "Size",
y = "Investment Distortion",
fill = "Average excess return"
) +
theme(legend.position = "None")
ggsave("gfx/conditional_invdist_size.pdf", width = 10, height = 5)
ret <- data |>
group_by(size, invdist_port, month) |>
mutate(
n = n(),
mean_invdist = weighted.mean(invdist, mktcap, na.rm = TRUE),
mean_mktcap = mean(mktcap, na.rm = TRUE),
mean_ret = weighted.mean(ret_excess, mktcap, na.rm = TRUE)
) |>
select(size, invdist_port, month, mean_ret)
# Join the average returns with the factors
ret <- ret |>
left_join(factors_ff_monthly, by = "month")
ret$month <- ymd(ret$month)
ret_summary <- ret |>
group_by(size,invdist_port) |>
reframe(
ex_ret = mean(mean_ret - mkt_excess, na.rm = TRUE),
alpha = as.numeric(lm(mean_ret ~ 1 + mkt_excess + smb + hml + rmw + cma)$coefficients[1]),
alpha_pval = as.numeric(summary(lm(mean_ret ~ 1 + mkt_excess + smb + hml + rmw + cma))$coefficients[1, 4]),
beta = as.numeric(lm(mean_ret ~ 1 + mkt_excess + smb + hml + rmw + cma)$coefficients[2]),
cma_coef = as.numeric(lm(mean_ret ~ 1 + mkt_excess + smb + hml + rmw + cma)$coefficients[6]),
ret = mean(mean_ret, na.rm = TRUE)
)
# Make geom_tile plot with investment distortion and size and label alpha and alpha p-values
ret_summary |>
group_by(size, invdist_port) |>
ggplot(aes(x = size, y = invdist_port, fill = as.factor((1:9)))) +
geom_tile() +
geom_text(aes(label = scales::percent(round((alpha), 3))), size = 8, color = "black") +
geom_text(aes(label = ifelse(alpha_pval < 0.01, "***", ifelse(alpha_pval < 0.05, "**", ifelse(alpha_pval < 0.1, "*", "")))), vjust = 3, size = 5, color = "black") +
theme_economist() +
scale_fill_brewer(palette = "BrBG") +
labs(
x = "Size",
y = "Investment Distortion",
fill = TeX("\\alpha")
) +
theme(legend.position = "None")
# Make geom_tile plot with investment distortion and size and label alpha and alpha p-values
ret_summary |>
group_by(size, invdist_port) |>
ggplot(aes(x = size, y = invdist_port, fill = as.factor((1:9)))) +
geom_tile() +
geom_text(aes(label = scales::percent(round((-alpha), 3))), size = 8, color = "black") +
geom_text(aes(label = ifelse(alpha_pval < 0.01, "***", ifelse(alpha_pval < 0.05, "**", ifelse(alpha_pval < 0.1, "*", "")))), vjust = 3, size = 5, color = "black") +
theme_economist() +
scale_fill_brewer(palette = "BrBG") +
labs(
x = "Size",
y = "Investment Distortion",
fill = TeX("\\alpha")
) +
theme(legend.position = "None")
ggsave("gfx/conditional_invdist_size_significance.pdf", width = 10, height = 5)
# Get the returns of each portfolio
ret_test <- ret |>
group_by(size,invdist_port) |>
summarise(
est = round(t.test(mean_ret - mkt_excess, mu = 0)$estimate,4),
p = round(t.test(mean_ret - mkt_excess, mu = 0)$p.value,4)
)
# For each portfolio and month get the average return from ret
ret_mat <- ret |>
group_by(size, invdist_port, month) |>
summarise(
ret = mean(mean_ret, na.rm = FALSE)
)
# Pivot wide to get a matrix of returns
ret_mat <- ret_mat |>
pivot_wider(names_from = c(size,invdist_port), values_from = ret)
# Order by date
ret_mat <- ret_mat[order(ret_mat$month),]
# Convert to numeric
ret_mat <- as.data.frame(lapply(ret_mat, as.numeric))
# Remove month column
ret_mat <- ret_mat[,-1]
# Use mice to impute missing values
ret_mat <- complete(mice(ret_mat, m = 5, maxit = 10, method = "pmm", seed = 1234))
# Get the average return of the market
ret_mat <- as.matrix(ret_mat)
# Test for differences in mean returns between each portfolio and the market
# monoSummary implements the test for monotonicity in asset returns, based on portfolio sorts in Patton & Timmermann (2010).
mono_test <- monoSummary(ret_mat,bootstrapRep = 1000, wolakRep = 1000,
increasing = FALSE, difference = FALSE, plot = FALSE, block_length = 6, zero_treshold = 1e-6)
mono_table <- data.frame(
mean_difference = round(mono_test$TopMinusBottom,3),
Up_pval = round(mono_test$UP_pval,3),
Down_pval = round(mono_test$DOWN_pval,3),
Rank = round(mono_test$MRall_pval,3),
Wolak_pval = round(mono_test$Wolak_pval,3),
Bonferroni_pval = round(mono_test$Bonferroni_pval,3)
)
# Format as LaTeX table
mono_table <- kable(mono_table, format = "latex", booktabs = TRUE, digits = 3)
mono_table
