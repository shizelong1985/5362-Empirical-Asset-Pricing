# Transform data to quarterly frequency and select all variables
data <- data |>
group_by(permno, quarter) |>
summarise(
# Variables
at = sum(at),
lt = sum(lt),
be = sum(be),
capx = sum(capx),
mktcap = sum(mktcap),
revt = sum(revt),
fcf = sum(fcf),
lev = sum(lev),
ni = sum(ni),
profit = sum(profit),
xrd = sum(xrd),
ret_excess = sum(ret_excess),
ret_cum = sum(ret_cum),
datadate = first(datadate),
date = first(date),
industry = first(industry),
exchange = first(exchange),
n = n()
)
# Transform data to quarterly frequency and select all variables
data <- data |>
group_by(permno, year) |>
summarise(
# Variables
at = sum(at),
lt = sum(lt),
be = sum(be),
capx = sum(capx),
mktcap = sum(mktcap),
revt = sum(revt),
fcf = sum(fcf),
lev = sum(lev),
ni = sum(ni),
profit = sum(profit),
xrd = sum(xrd),
ret_excess = sum(ret_excess),
ret_cum = sum(ret_cum),
datadate = first(datadate),
date = first(date),
industry = first(industry),
exchange = first(exchange),
n = n()
)
# Load data from local database
data <- tbl(db_connection, "data") |>
collect()
# Data is in quarterly frequency, so the month column is renamed to quarter and converted to a year-quarter format
data <- data |>
mutate(
month = ymd(datadate),
month_num = month(month),
date = month,
year = year(month),
quarter = paste0(year, "-", quarters(month)),
quarter = as.yearqtr(quarter, format = "%Y-Q%q")
)
data <- data |>
filter(month_num == 12)
# Transform data to quarterly frequency and select all variables
data <- data |>
group_by(permno, year) |>
summarise(
# Variables
at = sum(at),
lt = sum(lt),
be = sum(be),
capx = sum(capx),
mktcap = sum(mktcap),
revt = sum(revt),
fcf = sum(fcf),
lev = sum(lev),
ni = sum(ni),
profit = sum(profit),
xrd = sum(xrd),
ret_excess = sum(ret_excess),
ret_cum = sum(ret_cum),
datadate = first(datadate),
date = first(date),
industry = first(industry),
exchange = first(exchange),
n = n()
)
# Calculate Tobin's Q
data <- data |>
mutate(
Q = coalesce((at + mktcap - be)/at , 1),
ExcessQ = Q - 1
)
# data$month as the first day of the month in datadate (e.g. 2010-01-01)
data <- data |>
mutate(
month = ymd(str_c(year(datadate), "-", month(datadate), "-01"))
)
# Get lagged variables
data <- data |>
group_by(permno) |>
mutate(
# Lagged variables
at_lag = coalesce(lag(at),0),
lt_lag = coalesce(lag(lt),0),
capx_lag = coalesce(lag(capx),0),
mktcap = coalesce(lag(mktcap),0),
revt_lag = coalesce(lag(revt),0),
fcf_lag = coalesce(lag(fcf),0),
lev_lag = coalesce(lag(lev),0),
profit_lag = coalesce(lag(profit),0),
) |>
ungroup()
# Compute variables
data <- data |>
mutate(
ItC = coalesce(capx/(at - lt),0),
ItC_lag = coalesce(capx_lag/(at_lag - lt_lag),0),
RnD = coalesce(xrd/at_lag,0),
revt_g = coalesce(log(na_if(revt,0) - na_if(revt_lag,0)),0)
)
# Replace inf with NA
data[sapply(data, is.infinite)] <- 0
data <- data %>% mutate_if(is.numeric , replace_na, replace = 0)
summary(data)
# Only keep data from 1965 and onwards
data <- data |>
filter(year >= 1965)
# Get number of observations per PERMNO
data <- data |>
group_by(permno) |>
mutate(
n = n()
) |>
ungroup()
# Plot distribution of number of observations per PERMNO
data |>
ggplot(aes(x = n)) +
geom_histogram(bins = 100) +
labs(
title = "Number of observations per PERMNO",
x = "Number of observations",
y = "Frequency"
) +
# Breaks every 10
scale_x_continuous(breaks = seq(0, 1000, by = 5)) +
theme_economist() +
scale_color_economist()
# Keep PERMNOs with at least 4 years of data
data <- data |>
filter(n >= 4)
# Number of observations left
nrow(data)
# Unique PERMNOs
n_distinct(data$permno)
data <- data |>
group_by(permno) |>
mutate(
invdist = abs(resid(lm(ItC ~ ItC_lag + RnD + Q + lev + profit + fcf + revt_g
))))
##### Descriptive statistics #####
create_summary <- function(data, column_name) {
data |>
select(value = {{ column_name }}) |>
summarize(
mean = round(mean(value),4),
sd = round(sd(value),4),
min = round(min(value),4),
median = round(quantile(value, 0.50),4),
max = round(max(value),4),
n = n()
)
}
# Check distribution of returns
data |>
ggplot(aes(x = ret_excess)) +
geom_histogram(bins = 50) +
labs(
title = "Distribution of excess returns",
x = "Excess return",
y = "Frequency"
) +
theme_economist() +
scale_color_economist() +
scale_x_continuous(labels = percent)
# Check distribution of investment distortion
data |>
ggplot(aes(x = invdist)) +
geom_histogram(bins = 100) +
labs(
title = "Distribution of Investment Distortion",
x = "Investment Distortion",
y = "Frequency"
) +
scale_color_economist() +
theme_economist()
# Check distribution of R&D intensity
data |>
ggplot(aes(x = RnD)) +
geom_histogram(bins = 100) +
labs(
title = "Distribution of R&D Intensity",
x = "R&D Intensity",
y = "Frequency"
) +
scale_color_economist() +
theme_economist()
# Drop where Industry is "Missing"
data <- data |>
filter(industry != "Missing")
summaryRet <- data |>
#filter(quarter == max(quarter)) |>
group_by(exchange) |>
create_summary(ret_excess)
summaryRet
# Only keep NYSE data
data <- data |>
filter(exchange == "NYSE")
summaryInvDist <- data |>
#filter(quarter == max(quarter)) |>
group_by(exchange) |>
create_summary(invdist)
summaryInvDist
# Table in LaTeX
summaryRet <- kable(summaryRet, format = "latex", booktabs = TRUE, digits = 3)
# Save to file
writeLines(summaryRet, "tables/summaryRet.tex")
summaryInvDist <- kable(summaryInvDist, format = "latex", booktabs = TRUE, digits = 3)
# Save to file
writeLines(summaryInvDist, "tables/summaryInvDist.tex")
# Plot variables using mktcap weighted average
data |>
#filter(quarter == max(quarter)) |>
group_by(date = year(quarter)) |>
mutate(
date = as.Date(date),
mktcap = sum(mktcap, na.rm = TRUE),
invdist = sum(mktcap*invdist, na.rm = TRUE)/mktcap,
ItC = sum(mktcap*ItC, na.rm = TRUE)/mktcap,
RnD = sum(mktcap*RnD, na.rm = TRUE)/mktcap,
lev = sum(mktcap*lev, na.rm = TRUE)/mktcap,
profit = sum(mktcap*profit, na.rm = TRUE)/mktcap,
revt_g = sum(mktcap*revt_g, na.rm = TRUE)/mktcap
) |>
ggplot(aes(x = date)) +
geom_line(aes(y = invdist, color = "Investment Distortion")) +
geom_line(aes(y = ItC, color = "Investment-to-Capital")) +
geom_line(aes(y = lev, color = "Leverage")) +
geom_line(aes(y = profit, color = "Profitability")) +
geom_line(aes(y = RnD, color = "R&D-Intensity")) +
#geom_line(aes(y = revt_g, color = "Revenue growth")) +
labs(
x = NULL, y = NULL
) +
scale_y_continuous() +
scale_x_continuous(breaks = seq(1965, 2022, by = 5)) +
#scale_x_date(date_breaks = "5 years", date_labels = "%Y" ) +
theme(legend.position = "bottom", legend.box = "horizontal", legend.box.just = "bottom", legend.box.margin = unit(0.5, "lines")) +
theme_economist() +
scale_color_economist() +
theme(legend.title=element_blank())
# Plot variables using mktcap weighted average
data |>
# Plot variables using mktcap weighted average
data |>
#filter(quarter == max(quarter)) |>
group_by(date = year) |>
mutate(
date = as.Date(date),
mktcap = sum(mktcap, na.rm = TRUE),
invdist = sum(mktcap*invdist, na.rm = TRUE)/mktcap,
ItC = sum(mktcap*ItC, na.rm = TRUE)/mktcap,
RnD = sum(mktcap*RnD, na.rm = TRUE)/mktcap,
lev = sum(mktcap*lev, na.rm = TRUE)/mktcap,
profit = sum(mktcap*profit, na.rm = TRUE)/mktcap,
revt_g = sum(mktcap*revt_g, na.rm = TRUE)/mktcap
) |>
ggplot(aes(x = date)) +
geom_line(aes(y = invdist, color = "Investment Distortion")) +
geom_line(aes(y = ItC, color = "Investment-to-Capital")) +
geom_line(aes(y = lev, color = "Leverage")) +
geom_line(aes(y = profit, color = "Profitability")) +
geom_line(aes(y = RnD, color = "R&D-Intensity")) +
#geom_line(aes(y = revt_g, color = "Revenue growth")) +
labs(
x = NULL, y = NULL
) +
scale_y_continuous() +
scale_x_continuous(breaks = seq(1965, 2022, by = 5)) +
#scale_x_date(date_breaks = "5 years", date_labels = "%Y" ) +
theme(legend.position = "bottom", legend.box = "horizontal", legend.box.just = "bottom", legend.box.margin = unit(0.5, "lines")) +
theme_economist() +
scale_color_economist() +
theme(legend.title=element_blank())
data$year
data$date
# Plot variables using mktcap weighted average
data |>
#filter(quarter == max(quarter)) |>
group_by(date = year) |>
mutate(
date = date,
mktcap = sum(mktcap, na.rm = TRUE),
invdist = sum(mktcap*invdist, na.rm = TRUE)/mktcap,
ItC = sum(mktcap*ItC, na.rm = TRUE)/mktcap,
RnD = sum(mktcap*RnD, na.rm = TRUE)/mktcap,
lev = sum(mktcap*lev, na.rm = TRUE)/mktcap,
profit = sum(mktcap*profit, na.rm = TRUE)/mktcap,
revt_g = sum(mktcap*revt_g, na.rm = TRUE)/mktcap
) |>
ggplot(aes(x = date)) +
geom_line(aes(y = invdist, color = "Investment Distortion")) +
geom_line(aes(y = ItC, color = "Investment-to-Capital")) +
geom_line(aes(y = lev, color = "Leverage")) +
geom_line(aes(y = profit, color = "Profitability")) +
geom_line(aes(y = RnD, color = "R&D-Intensity")) +
#geom_line(aes(y = revt_g, color = "Revenue growth")) +
labs(
x = NULL, y = NULL
) +
scale_y_continuous() +
scale_x_continuous(breaks = seq(1965, 2022, by = 5)) +
#scale_x_date(date_breaks = "5 years", date_labels = "%Y" ) +
theme(legend.position = "bottom", legend.box = "horizontal", legend.box.just = "bottom", legend.box.margin = unit(0.5, "lines")) +
theme_economist() +
scale_color_economist() +
theme(legend.title=element_blank())
ggsave("gfx/mktcap_avg_var.pdf", width = 10, height = 5)
### Visualize some aspects of the data ###
id <- 38746
# Plot variables
data |>
filter(permno == id) |>
ggplot(aes(x = date)) +
geom_line(aes(y = invdist, color = "Investment Distortion")) +
geom_line(aes(y = ItC, color = "Investment-to-Capital")) +
geom_line(aes(y = lev, color = "Leverage")) +
geom_line(aes(y = profit, color = "Profitability")) +
geom_line(aes(y = RnD, color = "R&D-Intensity")) +
labs(
x = NULL, y = NULL
) +
##scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_economist() +
scale_color_economist() +
theme(legend.title=element_blank()) +
# break date-axis every 5 years
scale_x_date(date_breaks = "5 years", date_labels = "%Y" ) +
scale_y_continuous()
# Plot variables
data |>
filter(permno == id) |>
ggplot(aes(x = year)) +
geom_line(aes(y = invdist, color = "Investment Distortion")) +
geom_line(aes(y = ItC, color = "Investment-to-Capital")) +
geom_line(aes(y = lev, color = "Leverage")) +
geom_line(aes(y = profit, color = "Profitability")) +
geom_line(aes(y = RnD, color = "R&D-Intensity")) +
labs(
x = NULL, y = NULL
) +
##scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_economist() +
scale_color_economist() +
theme(legend.title=element_blank()) +
# break date-axis every 5 years
scale_x_date(date_breaks = "5 years", date_labels = "%Y" ) +
scale_y_continuous()
id <- sample(data$permno, 1)
# Plot variables
data |>
filter(permno == id) |>
ggplot(aes(x = year)) +
geom_line(aes(y = invdist, color = "Investment Distortion")) +
geom_line(aes(y = ItC, color = "Investment-to-Capital")) +
geom_line(aes(y = lev, color = "Leverage")) +
geom_line(aes(y = profit, color = "Profitability")) +
geom_line(aes(y = RnD, color = "R&D-Intensity")) +
labs(
x = NULL, y = NULL
) +
##scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_economist() +
scale_color_economist() +
theme(legend.title=element_blank()) +
# break date-axis every 5 years
scale_x_date(date_breaks = "5 years", date_labels = "%Y" ) +
scale_y_continuous()
id <- sample(data$permno, 1)
# Plot variables
data |>
filter(permno == id) |>
ggplot(aes(x = year)) +
geom_line(aes(y = invdist, color = "Investment Distortion")) +
geom_line(aes(y = ItC, color = "Investment-to-Capital")) +
geom_line(aes(y = lev, color = "Leverage")) +
geom_line(aes(y = profit, color = "Profitability")) +
geom_line(aes(y = RnD, color = "R&D-Intensity")) +
labs(
x = NULL, y = NULL
) +
##scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_economist() +
scale_color_economist() +
theme(legend.title=element_blank()) +
# break date-axis every 5 years
scale_x_date(date_breaks = "5 years", date_labels = "%Y" ) +
scale_y_continuous()
# Plot variables
data |>
filter(permno == id) |>
ggplot(aes(x = year)) +
geom_line(aes(y = invdist, color = "Investment Distortion")) +
geom_line(aes(y = ItC, color = "Investment-to-Capital")) +
geom_line(aes(y = lev, color = "Leverage")) +
geom_line(aes(y = profit, color = "Profitability")) +
geom_line(aes(y = RnD, color = "R&D-Intensity")) +
labs(
x = NULL, y = NULL
) +
##scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_economist() +
scale_color_economist() +
theme(legend.title=element_blank()) +
# break date-axis every 5 years
#scale_x_date(date_breaks = "5 years", date_labels = "%Y" ) +
scale_y_continuous()
# Plot variables
data |>
filter(permno == id) |>
ggplot(aes(x = year)) +
geom_line(aes(y = invdist, color = "Investment Distortion")) +
geom_line(aes(y = ItC, color = "Investment-to-Capital")) +
geom_line(aes(y = lev, color = "Leverage")) +
geom_line(aes(y = profit, color = "Profitability")) +
geom_line(aes(y = RnD, color = "R&D-Intensity")) +
labs(
x = NULL, y = NULL
) +
scale_x_continuous(breaks = seq(1965, 2022, by = 5)) +
theme_economist() +
scale_color_economist() +
theme(legend.title=element_blank()) +
# break date-axis every 5 years
#scale_x_date(date_breaks = "5 years", date_labels = "%Y" ) +
scale_y_continuous()
### Visualize some aspects of the data ###
id <- 12490
# Plot variables
data |>
filter(permno == id) |>
ggplot(aes(x = year)) +
geom_line(aes(y = invdist, color = "Investment Distortion")) +
geom_line(aes(y = ItC, color = "Investment-to-Capital")) +
geom_line(aes(y = lev, color = "Leverage")) +
geom_line(aes(y = profit, color = "Profitability")) +
geom_line(aes(y = RnD, color = "R&D-Intensity")) +
labs(
x = NULL, y = NULL
) +
scale_x_continuous(breaks = seq(1965, 2022, by = 5)) +
theme_economist() +
scale_color_economist() +
theme(legend.title=element_blank()) +
# break date-axis every 5 years
#scale_x_date(date_breaks = "5 years", date_labels = "%Y" ) +
scale_y_continuous()
ggsave(paste("gfx/permno_", as.character(id), ".pdf", sep = ""), width = 10, height = 5)
# Investment distortions by industry
data |>
group_by(permno, year = year) |>
filter(date == max(date)) |>
ungroup() |>
group_by(industry, year) |>
reframe(
share = sum(invdist),
.groups = "drop"
) |>
ggplot(aes(
x = year,
y = share,
color = industry,
linetype = industry
)) +
geom_line() +
theme_economist() +
labs(
x = NULL, y = NULL, color = NULL, linetype = NULL
) +
scale_y_continuous() +
scale_x_continuous(breaks = seq(1965, 2022, by = 5)) +
coord_cartesian()
ggsave("gfx/invdist_industry.pdf", width = 10, height = 5)
# Function to assign portfolios
assign_portfolio <- function(data, var, n_portfolios) {
breakpoints <- data |>
reframe(
breakpoint = quantile(
{{ var }},
probs = seq(0, 1, length.out = n_portfolios + 1),
na.rm = TRUE)
) |>
pull(breakpoint) |>
as.numeric()
assigned_portfolios <- data |>
mutate(portfolio = findInterval({{ var }},
breakpoints,
all.inside = TRUE
)) |>
pull(portfolio)
return(assigned_portfolios)
}
